{"version":3,"sources":["components/Editor.jsx","components/Preview.jsx","statics/initialText.js","components/Container.jsx","App.js","reportWebVitals.js","index.js"],"names":["StyledEditor","styled","textarea","Editor","onInputChange","textInput","id","name","onChange","value","StyledPreview","div","Preview","dangerouslySetInnerHTML","__html","marked","StyledContainer","Container","useState","setTextInput","e","target","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPAIMA,EAAeC,IAAOC,SAAV,gOAwBHC,EAXA,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,cAAeC,EAAe,EAAfA,UAC9B,OACE,cAACL,EAAD,CACEM,GAAG,SACHC,KAAK,QACLC,SAAUJ,EACVK,MAAOJ,K,iBClBPK,EAAgBT,IAAOU,IAAV,sUAiBJ,SAASC,EAAT,GAA+B,IAAbP,EAAY,EAAZA,UAM/B,OACE,cAACK,EAAD,UACE,qBAAKJ,GAAG,UAAUO,wBALb,CAAEC,OADOC,IAAOV,QCxB3B,I,ECOMW,EAAkBf,IAAOU,IAAV,iGAMN,SAASM,IAAa,IAAD,EAEAC,mBDfpB,68CCaoB,mBAE3Bb,EAF2B,KAEhBc,EAFgB,KAQlC,OACE,eAACH,EAAD,WACE,cAAC,EAAD,CAAQZ,cANU,SAACgB,GACrBD,EAAaC,EAAEC,OAAOZ,QAKkBJ,UAAWA,IACjD,cAACO,EAAD,CAASP,UAAWA,OCZXiB,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAACN,EAAD,OCKSO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6f5bb3b8.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\n//Styled Component\nconst StyledEditor = styled.textarea`\n  width: 80%;\n  outline: none;\n  margin: 20px;\n  height: 300px;\n  background-color: darkslategray;\n  color: ghostwhite;\n  font-size: 1.2em;\n  border: solid midnightblue;\n  padding: 20px;\n`\n\n//React Component\nconst Editor = ({onInputChange, textInput}) => {\n  return (\n    <StyledEditor \n      id='editor'\n      name='input'\n      onChange={onInputChange}\n      value={textInput}\n    />\n  )\n}\n\nexport default Editor;\n","import React from 'react';\nimport styled from 'styled-components';\nimport marked from 'marked';\n\n//Styled component\nconst StyledPreview = styled.div`\n  width: 90%;\n  background-color: antiquewhite;\n  text-align: start;\n  padding: 20px;\n  border: 1px solid #000;\n  & code {\n    background-color: darkslategray;\n    color: ghostwhite;\n    font-family: monospace;\n  }\n  & pre {\n    background-color: darkslategray;\n    padding: 5px;\n  }\n`\n\nexport default function Preview({textInput}) {\n  const getMarkdownText = () => {\n    let rawMarkup = marked(textInput);\n    return { __html: rawMarkup };\n  }\n\n  return (\n    <StyledPreview>\n      <div id='preview' dangerouslySetInnerHTML={getMarkdownText()} />\n    </StyledPreview> \n  )\n}\n","const example = \"# Welcome to my React Markdown Previewer!\\n## This is a sub-heading...\\n### And here's some other cool stuff:\\n\\nHeres some code, `<div></div>`, between 2 backticks.\\n\\n```\\n// this is multi-line code:\\n\\nfunction anotherExample(firstLine, lastLine) {\\n  if (firstLine == '```' && lastLine == '```') {\\n    return multiLineCode;\\n  }\\n}\\n```\\n\\nYou can also make text **bold**... whoa!\\nOr _italic_.\\nOr... wait for it... **_both!_**\\nAnd feel free to go crazy ~~crossing stuff out~~.\\n\\nThere's also [links](https://www.linkedin.com/in/maxisan/), and\\n> Block Quotes!\\n\\nAnd if you want to get really crazy, even tables:\\n\\nWild Header | Crazy Header | Another Header?\\n------------ | ------------- | -------------\\nYour content can | be here, and it | can be here....\\nAnd here. | Okay. | I think we get it.\\n\\n- And of course there are lists.\\n  - Some are bulleted.\\n     - With different indentation levels.\\n        - That look like this.\\n        \\n        \\n1. And there are numbererd lists too.\\n1. Use just 1s if you want!\\n1. And last but not least, let's not forget embedded images:\\n\\nDesarrollado con React ![Desarrollado con React](https://4.bp.blogspot.com/-_YSVTe2ekBU/XKMntJDH0ZI/AAAAAAAAXNk/3d48i_XShWwvoMNj0YJWp2J4_Woh9dzGgCLcBGAs/s1600/reactjs%2Btutorial.png) & Styled Components ![Styled Components](https://jpoissonnier.gallerycdn.vsassets.io/extensions/jpoissonnier/vscode-styled-components/1.5.0/1611341317699/Microsoft.VisualStudio.Services.Icons.Default)\"\n\nexport default example; \n","import React, {useState} from 'react';\nimport Editor from './Editor';\nimport Preview from './Preview';\nimport styled from 'styled-components';\nimport initialText from '../statics/initialText.js';\n\n//Styled component\nconst StyledContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n\nexport default function Container() {\n  \n  const [textInput, setTextInput] = useState(initialText)\n  \n  const onInputChange = (e) => {\n    setTextInput(e.target.value)\n  }\n\n  return (\n    <StyledContainer>\n      <Editor onInputChange={onInputChange} textInput={textInput} />\n      <Preview textInput={textInput} />\n    </StyledContainer>\n  )\n}\n","import React from 'react';\nimport './App.css';\nimport Container from './components/Container';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Container />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}